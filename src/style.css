/* /src/style.css */
/* Updated Layout: Image Section (75%) + Button Section (25%) + Grid Layout */

/* === Basic Reset / Body Styling === */
body {
  margin: 0;
  overflow: auto;
  font-family: sans-serif;
  background-color: #E0E0E0; /* Outer background */
}

/* === App Container === */
#app {
  max-width: 400px;
  margin: 0 auto;
  box-sizing: border-box;
  position: relative; /* For absolute children - start screen */
  display: flex;
  flex-direction: column; 
  min-height: 100vh;
  background-color: #fff; 
}

/* === Title Bar Styling (Using Grid) === */
#title-bar {
  height: 32px; /* Fixed height */
  flex-shrink: 0; /* Prevent shrinking if #app flex settings change */
  color: #1b1b1b; /* Text color */
  background-color: #ffffff; /* Background color */
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  z-index: 150;
  padding: 0; /* Remove padding, manage spacing via grid/children */
  display: grid;
  grid-template-columns: 1fr 4fr 1fr; /* Columns: 1/6, 4/6, 1/6 */
  align-items: stretch; /* Make children fill height by default */
}

#back-button {
  /* Grid placement implicitly column 1 */
  background-color: #2d4ade; /* Keep style */
  border: none; /* Keep style */
  color: #e2e2e2; /* Keep style */
  font-size: 1.1rem; /* Adjusted slightly */
  font-weight: bold;
  font-family: 'Baloo 2', cursive;
  cursor: pointer;
  transition: opacity 0.2s ease; /* Keep hover transition */
  /* --- Flexbox for internal centering --- */
  display: flex;
  align-items: center; /* Center text vertically */
  justify-content: center; /* Center text horizontally */
  /* Height is automatically stretched by parent grid's align-items: stretch */
}

#back-button:hover {
  opacity: 0.8; /* Adjusted hover opacity */
}

#title-text {
  grid-column: 2 / 3; /* Place in the middle column */
  text-align: center; /* Center text horizontally */
  align-self: center; /* Center vertically within the stretched grid cell */

  /* Text styling */
  font-size: 1.3rem; /* Adjusted slightly */
  font-weight: bold;
  font-family: 'Baloo 2', cursive;
  color: #1b1b1b; /* Ensure color is set if different from parent */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 0 5px; /* Add minimal horizontal padding */
}
/* === End Title Bar Styling === */


/* === Top Image/Text Section (75% height) === */
#image-section {
  flex: 1;
  min-height: 0;
  position: relative;
  overflow: hidden;
  background-color: #222;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

#image-section::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom, 
    rgba(0, 0, 0, 0.1) 0%, 
    rgba(0, 0, 0, 0.1) 75%, 
    rgba(0, 0, 0, 0.8) 100%
  );
  /* Adjust the gradient colors and opacity as needed */
}


/* Note: This rule might push your falling text down significantly */
#image-section h1 {
  margin-top: 0; /* Reset margin */
}

/* === Bottom Button Section (25% height) - Using Grid === */
#button-section {
  min-height: 25vh; /* Keep original height */
  flex-shrink: 0; /* Prevent shrinking */
  background-color: #F5F5F5;
  position: relative;
  box-sizing: border-box;
  padding: 10px;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  align-items: center;
}

/* === Button Assembly Placement (Inside Grid) === */
#button-assembly {
  grid-column: 2 / 3; /* Place in the second column */
  justify-self: center; /* Center horizontally within the column */
  align-self: center; /* Center vertically within the row */
}

/* === Icon Container Styling & Placement (NEW) === */
.icon-container {
  grid-column: 3 / 4;
  justify-self: center;
  align-self: center;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* === Basic SVG Styling (NEW) === */
.icon-container svg {
  display: block;
  width: 60px; /* Adjusted size slightly */
  height: 60px; /* Adjusted size slightly */
  fill: #666; /* Slightly darker grey */
  cursor: pointer;
}

.icon-container svg:hover { fill: #111; }
.icon-container.state-sound-on #icon-sound-off,
.icon-container.state-sound-off #icon-sound-on { display: none; }
.icon-container.state-sound-on #icon-sound-on,
.icon-container.state-sound-off #icon-sound-off { display: block; }


.icon-container.sound-icon-muted {
  opacity: 0.5; 
}

/* === Content Positioning Adjustments === */
#animal-name-display {
  position: absolute;
  top: 85%; /* Centered vertically within image-section */
  left: 50%;
  transform: translate(-50%, -50%); /* Center the container */
  width: 90%;
  z-index: 10;
}

/* === Falling Letters Animation Styles === */
.falling-word {
  font-family: 'Baloo 2', 'Comic Neue', 'Arial', sans-serif;
  display: flex;
  justify-content: center;
  color: rgb(255, 255, 255);
  font-weight: bold;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.7);
  margin: 0;
  padding: 0;
   /* --- Prevent Text Selection --- */
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none;    /* Firefox */
  -ms-user-select: none;     /* IE/Edge */
  user-select: none;         /* Standard */
}

.falling-word span {
  display: inline-block;
  transform: translateY(-100vh);
  animation: drop 1s cubic-bezier(0.33, 1.6, 0.66, 1) forwards;
  margin: 0 2px;
  /* font-size is set dynamically on parent h1 by JS */
}

.falling-word span:nth-child(1) { animation-delay: 1.0s; }
.falling-word span:nth-child(2) { animation-delay: 1.1s; }
.falling-word span:nth-child(3) { animation-delay: 1.2s; }
.falling-word span:nth-child(4) { animation-delay: 1.3s; }
.falling-word span:nth-child(5) { animation-delay: 1.4s; }
/* Add more if needed */


@keyframes drop {
  0% { transform: translateY(-100vh); }
  60% { transform: translateY(20px); }
  75% { transform: translateY(-12px); }
  85% { transform: translateY(6px); }
  92% { transform: translateY(-3px); }
  100% { transform: translateY(0); }
}

/* === State Visibility Control (REVISED FOR 3 STATES) === */

/* Default state (usually before JS adds any class): Often matches 'start' */

/* State: Start Screen Active */
body.state-start #start-screen {
  display: flex; /* Show start screen */
}
body.state-start #title-bar,
body.state-start #image-section,
body.state-start #button-section,
body.state-start #options-screen {
  display: none; /* Hide everything else */
}

/* State: Main Game Screen Active */
body.state-main #title-bar {
  display: grid; /* Show title bar */
}
body.state-main #image-section {
  display: block; /* Show image section */
}
body.state-main #button-section {
  display: grid; /* Show button section */
}
body.state-main #start-screen,
body.state-main #options-screen {
  display: none; /* Hide start and options screens */
}

/* State: Options Screen Active (NEW) */
body.state-options #title-bar {
  display: grid; /* Show title bar */
}
body.state-options #options-screen {
  display: flex; /* Show options screen */
}
body.state-options #start-screen,
body.state-options #image-section,
body.state-options #button-section {
  display: none; /* Hide start and main game sections */
}

/* === End State Visibility Control === */


/* === Button Component Styles === */
#bezel {
  width: 145px;
  height: 145px;
  /* Removed redundant max-width/height */
  position: relative;
  border-radius: 50%;
  background-color: #E0E0E0;
  background-image: linear-gradient( to bottom, #F5F5F5 0%, #D5D5D5 100% );
  box-shadow:
    1px 1px 3px rgba(0, 0, 0, 0.2),
    inset 0px 0px 1px 1px rgba(0, 0, 0, 0.25),
    inset 1px 1px 2px rgba(255, 255, 255, 0.7);
}

#inner-button {
  width: 75%;
  height: 75%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background-image: radial-gradient( circle at 50% 70%, #B83340 0%, #8F1521 50%, #580C1F 95% );
   box-shadow:
    inset 0px 0px 0px 1px rgba(88, 12, 31, 0.7),
    inset 0px 2px 3px rgba(0, 0, 0, 0.35),
    inset 0px -1px 1px rgba(255, 255, 255, 0.1);
  cursor: pointer;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

#inner-button.button-depressed {
  transform: translate(-50%, -50%) scale(0.95);
  box-shadow:
    inset 0px 0px 0px 1px rgba(88, 12, 31, 0.7),
    inset 0px 1px 2px rgba(0, 0, 0, 0.5);
}

/* Styling for the disabled button state */
#inner-button:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

/* === Transitions === */
body.transitions-ready #image-section {
  /* Increased fade duration from user input */
  transition: background-image 0.6s ease-in-out;
}

body.transitions-ready #inner-button {
   transition: transform 0.1s ease-in-out,
             box-shadow 0.1s ease-in-out,
             background-image 0.1s ease-in-out;
}


/* === Start Screen Styling === */
#start-screen {
  /* Positioning & Sizing (Keep As Is) */
  position: absolute;
  inset: 0;
  box-sizing: border-box;
  z-index: 200;
  background-color: #306344;
  padding: 30px; /* Padding for inner content if needed */
  /* Flexbox for Centering the MAIN BUTTON GROUP (squares) */
  display: flex;
  flex-direction: column;
  /* Justify centers the non-absolute items (square buttons) in available space */
  justify-content: center;
  /* Align centers the non-absolute items horizontally */
  align-items: center;
  gap: 50px; /* Space BETWEEN the square buttons */
  
  /* background-image: linear-gradient(
  to bottom,
  rgba(255, 240, 100, 0.5),
  rgba(0, 0, 0, 0.5),
  rgba(5, 5, 5, 0.5),
  rgb(255, 240, 100, 0.5)
), url('../images/bg-repeat-1.png'); */
}


#subtitle {
  font-size: 1.1rem;
  line-height: 0.2rem;
  font-weight: 300;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

#start-screen h2 {
  font-family: 'Baloo 2', cursive;
  font-size: 4.8rem;
  line-height: 3.5rem;
  color: #ffffff;
  margin: 0; /* Reset margin */
  margin-top: 35px;
  text-align: center; /* Center text within its own box */
  /* Absolute Positioning */
  position: absolute;
  width: 90%; /* Prevent text from hitting edges */
  top: 4%; /* Position roughly 1/6th down from the top. Adjust % as needed. */
  left: 50%;
  transform: translate(-50%, -50%); /* Center horizontally and vertically around the 'top' point */
  text-shadow: 1px 1px 18px #190202;
  padding-top: 5px;
}

.start-button {
  padding: 12px 25px;
  font-size: 1.1rem;
  font-family: 'Open Sans', sans-serif;
  color: #333;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 6px;
  cursor: pointer;
  min-width: 180px;
  text-align: center;
  transition: background-color 0.2s ease, box-shadow 0.2s ease;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  /* Remove margin-bottom if using gap */
  /* margin-bottom: 15px; */
}
.start-button:hover {
  background-color: #f0f0f0;
  box-shadow: 0 3px 6px rgba(0,0,0,0.1);
}

#start-btn-settings {
  position: absolute;
  bottom: 30px; /* Position 30px from the bottom. Adjust as needed. */
  left: 50%;
  transform: translateX(-50%); /* Center horizontally */
  /* It will inherit width/padding etc. from .start-button */
}


#start-level-1 {
  background-image: url('../images/farm.png');
}
#start-level-2 {
  background-image: url('../images/zoo.png');
}
#start-level-3 {
  background-image: url('../images/ocean.png');
}

/* --- >>> NEW: Square Button Specific Styles <<< --- */
.square-button {
  /* Override dimensions */
  width: 120px;  /* Adjust px value for desired size */
  height: 120px; /* Should be same as width */
  min-width: 0; /* Override min-width from .start-button */
  aspect-ratio: 1 / 1; /* Strongly enforce square shape */
  /* Appearance */
  border-radius: 20px; /* More rounded corners for square look */
  /* Text styling/centering within the square */
  font-size: 1.3rem; /* Increase font size? Adjust as needed */
  font-weight: bold;
  line-height: 1.2; /* Helps with vertical centering */
  text-align: center; /* Ensure text is centered */
  /* Use flex to perfectly center multi-line text if needed */
  display: flex;
  align-items: center;
  justify-content: center;
  background-size: cover;
  border: none;
  box-shadow: 1px 1px 28px #000000;
}

/* === State Visibility Control === */

/* Default State: When body has class "state-start" */
body.state-start #title-bar, /* <<< Hide Title Bar */
body.state-start #image-section,
body.state-start #button-section {
  display: none;
}
body.state-start #start-screen {
  display: flex;
}

/* Main App State: When body has class "state-main" */
body.state-main #start-screen {
  display: none;
}
body.state-main #title-bar { /* <<< Show Title Bar */
  display: grid; /* Use flex as defined in its base style */
}
body.state-main #image-section {
  display: block; /* Restore display */
}
body.state-main #button-section {
  display: grid; /* Restore display (grid) */
}
/* === End State Visibility Control === */


/**
 * Keyframes for the text bounce animation on button press.
 */

@keyframes textBounce {
  0%, 100%, 20%, 53%, 80% {
    transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0); /* Use translate3d for potential hardware acceleration */
  }
  40%, 43% {
    transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -20px, 0); /* Adjust -20px bounce height */
  }
  70% {
    transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -10px, 0); /* Secondary smaller bounce */
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

/**
 * Class to apply the text bounce animation to the H1.
 */
 #animal-name-display h1.apply-text-bounce {
  /* Apply the keyframes animation */
  animation-name: textBounce;
  animation-duration: 0.8s; /* Adjust duration as needed */
  animation-fill-mode: both; /* Keeps styles from keyframes before/after */
  animation-iteration-count: 1; /* Play only once per class application */
}

.left-icon-stack {
  grid-column: 1 / 2; /* Place in the first column */
  justify-self: center; /* Center the stack horizontally in the grid cell */
  align-self: center; /* Center the stack vertically in the grid cell */

  display: flex; /* Use flexbox to arrange the icons */
  flex-direction: column; /* Stack icons vertically */
  align-items: center; /* Center icons horizontally within the stack */
  gap: 15px; /* Space between the two icons vertically */
  padding: 10px; /* Padding around the icon stack within the column */
  padding-right: 30px;
}

.icon-button {
  /* Keep existing styles like width, height, background, border, etc. */
  width: 80px;
  height: 80px;
  background-color: #ffffff;
  border: 1px solid #ddd;
  border-radius: 10px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;

  opacity: 0.6; /* Dim unselected icons */
  cursor: pointer;
  transition: background-color 0.2s ease, box-shadow 0.2s ease, opacity 0.2s ease; /* Add opacity */
}

.icon-button.selected {
  opacity: 1.0; /* Fully opaque when selected */
  /* Optional stronger visual cue - uncomment or modify if desired */
  /* box-shadow: 0 0 5px rgba(45, 74, 222, 0.7); */
  /* cursor: default; */ /* Optional: Indicate it's already selected */
}

/* Ensure the image stays within bounds (optional, as width/height set in HTML) */
.icon-button img {
  display: block; /* Remove extra space below image */
  max-width: 100%;
  height: auto; /* Maintain aspect ratio if needed, but HTML width/height should dominate */
}

/* === Options Screen Styling === */

#options-screen {
  box-sizing: border-box;
  padding: 30px;
  padding-top: 75px; /* Account for 55px title bar + extra space */
  color: #212121; /* Dark grey/black text (or use #1A237E for dark blue) */
  display: flex; /* Use flexbox for content arrangement */
  flex-direction: column; /* Stack content vertically */
  align-items: flex-start; /* Align items to the left by default */
  gap: 25px; /* Vertical space between direct children (h2, option-item, p) */
  display: none; /* Will be overridden by state class later */
}

/* Style heading within options screen */
#options-screen h2 {
  font-size: 2.5rem; /* Large, clear heading */
  font-family: 'Baloo 2', cursive; /* Optional: Match other titles */
  color: #1A237E; /* Example: Dark blue heading */
  margin: 0; /* Remove default margin */
  width: 100%; /* Allow centering */
  text-align: center; /* Center the heading */
  margin-bottom: 65px; /* Add space below heading only */
}

/* Style the container for checkbox + label */
.option-item {
  display: flex;
  align-items: center; /* Vertically align checkbox and label */
  gap: 10px; /* Space between checkbox and label */
  width: 100%; /* Optional: make container full width */
  padding-left: 10px; /* Indent options slightly */
}

/* Style the label text */
#options-screen label {
  font-size: 1.2rem; /* Clear, large label */
  font-family: 'Open Sans', sans-serif; /* Readable font */
  /* Inherits main text color unless specified */
}

/* Style the checkbox appearance */
#options-screen input[type="checkbox"] {
  width: 20px; /* Make checkbox larger */
  height: 20px;
  cursor: pointer;
  accent-color: #2d4ade; /* Optional: Color the checkmark */
}

/* Style the paragraph text */
#options-screen p {
  font-size: 1rem; /* Clear paragraph text */
  font-family: 'Open Sans', sans-serif;
  line-height: 1.5; /* Improve readability */
  margin-top: 200px; /* Remove default margin */
  width: 100%; /* Optional: make container full width */
  padding-left: 10px; /* Indent paragraph slightly */
   /* Inherits main text color unless specified */
}
/* === End Options Screen Styling === */



@media only screen and (max-width: 399px) {
  #start-screen h2 {
    font-size: 3rem;
    top: 2%;
  }
  #start-btn-settings {
    margin-top: 40px;
    bottom: 15px;
  }
}
